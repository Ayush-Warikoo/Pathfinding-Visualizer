[{"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\index.js":"1","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reportWebVitals.js":"2","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\App.js":"3","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\MainPage.js":"4","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\Header.js":"5","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\Cell.js":"6","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\index.js":"7","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\headerState.js":"8","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\action\\index.js":"9","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\finishCell.js":"10","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\startCell.js":"11","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\algorithms\\dijkstra.js":"12","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\algorithms\\bfs.js":"13","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\constants.js":"14","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\forceUpdate.js":"15"},{"size":984,"mtime":1609920995028,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":179,"mtime":1609739985552,"results":"19","hashOfConfig":"17"},{"size":1542,"mtime":1610250090894,"results":"20","hashOfConfig":"17"},{"size":1726,"mtime":1610242336978,"results":"21","hashOfConfig":"17"},{"size":4533,"mtime":1610241595057,"results":"22","hashOfConfig":"17"},{"size":414,"mtime":1610171528805,"results":"23","hashOfConfig":"17"},{"size":237,"mtime":1609829041547,"results":"24","hashOfConfig":"17"},{"size":564,"mtime":1610172797570,"results":"25","hashOfConfig":"17"},{"size":234,"mtime":1609829040125,"results":"26","hashOfConfig":"17"},{"size":231,"mtime":1609829079260,"results":"27","hashOfConfig":"17"},{"size":6487,"mtime":1610325243316,"results":"28","hashOfConfig":"17"},{"size":4617,"mtime":1610325260201,"results":"29","hashOfConfig":"17"},{"size":89,"mtime":1610302811199,"results":"30","hashOfConfig":"17"},{"size":236,"mtime":1610172805671,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"d6xvn7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\index.js",[],["65","66"],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reportWebVitals.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\App.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\MainPage.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\Header.js",["67","68"],"import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {headerSelect} from './action/index';\r\nimport {bfs} from './algorithms/bfs';\r\nimport {dijkstra} from './algorithms/dijkstra';\r\n\r\n/*\r\nconst clearBoard = (grid, clear) =>\r\n{\r\n    grid = grid.grid;\r\n    console.log(grid);\r\n    clear = true;\r\n}\r\n*/\r\n\r\nfunction Header({ grid, clear }) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"Header\">\r\n            \r\n            <div className=\"Header__Start\" onClick={() => dispatch(headerSelect(\"Start\"))}> \r\n                <h2> Start </h2>\r\n            </div>\r\n            <div className=\"Header__Finish\" onClick={() => dispatch(headerSelect(\"Finish\"))}> \r\n                <h2> Finish </h2>\r\n            </div>\r\n            <div className=\"Header__Wall\" onClick={() => dispatch(headerSelect(\"Wall\"))}> \r\n                <h2> Wall </h2>\r\n            </div>\r\n            <div className=\"Header__Weight\" onClick={() => dispatch(headerSelect(\"Weight\"))}> \r\n                <h2> Weight </h2>\r\n            </div>\r\n            <div className=\"Header__Algorithm\" > \r\n                <h2> Algorithm </h2>\r\n                <button onClick={() => bfs(grid)}> Breadth-first search </button> \r\n                <button onClick={() => dijkstra(grid)}> Dijkstra </button> \r\n\r\n            </div>\r\n            <div className=\"Header__RunProgram\"> \r\n                <h2> Run Program </h2>\r\n            </div>\r\n            <div className=\"Header__ClearBoard\"> \r\n                <h2> Clear Board </h2>\r\n                <button onClick={clear} > Clear Board </button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\Cell.js",["69","70","71","72","73","74","75"],"import React, {useState, useEffect} from 'react';\r\nimport './Cell.css';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { setStart, setFinish } from './action/index';\r\n\r\nfunction Cell({ cell }) {\r\n    //Store Values\r\n    let headerState = useSelector(state => state.headerState);\r\n    let startCellCoord = useSelector(state => state.startCell);\r\n    let finishCellCoord = useSelector(state => state.finishCell);\r\n    let forceUpdate = useSelector(state => state.forceUpdate);\r\n\r\n    //Helper functions\r\n    const isStartCell = () =>\r\n    {\r\n        return (cell.row === startCellCoord[0] && cell.col === startCellCoord[1]);\r\n    }\r\n\r\n    const isFinishCell = () =>\r\n    {\r\n        return (cell.row === finishCellCoord[0] && cell.col === finishCellCoord[1]);\r\n    }\r\n\r\n    //States\r\n    const [startCell, setStartCell] = useState(isStartCell());\r\n    const [finishCell, setFinishCell] = useState(isFinishCell());\r\n    const [cellState, setCellState] = useState(cell.state);\r\n    const [cellPath, setCellPath] = useState(cell.path);\r\n    const [cellVisited, setCellVisited] = useState(cell.visited);\r\n    const dispatch = useDispatch();\r\n\r\n    //Event handling functions \r\n    useEffect(() => {\r\n        \r\n        if(startCell && !isStartCell())\r\n        {\r\n            setStartCell(false);\r\n        }\r\n        else if(finishCell && !isFinishCell())\r\n        {\r\n            setFinishCell(false);\r\n        }\r\n    }, [startCellCoord, finishCellCoord])\r\n\r\n    const onMouseDown = (e) =>\r\n    {\r\n        setCellState(cell.state); \r\n        if(headerState === \"Wall\" && e.buttons === 1)\r\n        {\r\n            if(cellState === \"Wall\")\r\n            {\r\n                setCellState(\"None\");\r\n                cell.state = \"None\";\r\n            }\r\n            else if(!startCell && !finishCell)\r\n            {\r\n                setCellState(\"Wall\");\r\n                cell.state = \"Wall\";\r\n            }\r\n        }\r\n        else if(headerState === \"Weight\" && e.buttons === 1)\r\n        {\r\n            if(cellState === \"Weight\")\r\n            {\r\n                setCellState(\"None\");\r\n                cell.state = \"None\";\r\n            }\r\n            else if(!startCell && !finishCell)\r\n            {\r\n                setCellState(\"Weight\");\r\n                cell.state = \"Weight\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const onMouseEnter = (e) =>\r\n    {\r\n        setCellState(cell.state);        \r\n        if(headerState === \"Wall\" && e.buttons === 1)\r\n        {\r\n            if(cellState === \"Wall\")\r\n            {\r\n                setCellState(\"None\");\r\n                cell.state = \"None\";\r\n            }\r\n            else if(!startCell && !finishCell)\r\n            {\r\n                setCellState(\"Wall\");\r\n                cell.state = \"Wall\";\r\n            }\r\n        }\r\n        else if(headerState === \"Weight\" && e.buttons === 1)\r\n        {\r\n            if(cellState === \"Weight\")\r\n            {\r\n                setCellState(\"None\");\r\n                cell.state = \"None\";\r\n            }\r\n            else if(!startCell && !finishCell)\r\n            {\r\n                setCellState(\"Weight\");\r\n                cell.state = \"Weight\";\r\n            }\r\n        }       \r\n    }\r\n\r\n    const onMouseUp = (e) =>\r\n    {\r\n        if(headerState === \"Start\" && !finishCell)\r\n        {\r\n            setStartCell(true);\r\n            dispatch(setStart([cell.row, cell.col]));\r\n        }\r\n        else if(headerState === \"Finish\" && !startCell)\r\n        {\r\n            setFinishCell(true);\r\n            dispatch(setFinish([cell.row, cell.col]));\r\n        }   \r\n    }\r\n\r\n    //Regular functions\r\n    const setStateClass = () =>\r\n    {\r\n        if(startCell)\r\n        {\r\n            return \"Start\";\r\n        }\r\n        else if(finishCell)\r\n        {\r\n            return \"Finish\";\r\n        }\r\n        return cell.state;\r\n    }\r\n\r\n    const setVisitedClass = () =>\r\n    {\r\n        if(cell.visited)\r\n        {\r\n            return \"Visited\";\r\n        }\r\n        return \"NotVisited\";\r\n    }\r\n\r\n    const setPathClass = () =>\r\n    {\r\n        \r\n        if(cell.path)\r\n        {\r\n            return \"Path\";\r\n        }\r\n        return \"NotPath\";\r\n    }\r\n\r\n    return (        \r\n        <div //key={\"Cell:\" + cell.row + \", \" + cell.col}\r\n            className={\"Cell \" + \"Cell__\" + setStateClass() + \" Cell__\" + setVisitedClass() + \" Cell__\" + setPathClass()} \r\n            onMouseDown={onMouseDown} \r\n            onMouseEnter={onMouseEnter}\r\n            onMouseUp={onMouseUp}\r\n        >\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cell\r\n\r\n\r\n","C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\index.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\headerState.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\action\\index.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\finishCell.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\startCell.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\algorithms\\dijkstra.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\algorithms\\bfs.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\constants.js",[],"C:\\Users\\ayush\\OneDrive - University of Waterloo\\Desktop\\Pathfinding Visualizer Project\\pathfinding-visualizer\\src\\reducer\\forceUpdate.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":16,"nodeType":"82","messageId":"83","endLine":1,"endColumn":24},{"ruleId":"80","severity":1,"message":"84","line":3,"column":9,"nodeType":"82","messageId":"83","endLine":3,"endColumn":20},{"ruleId":"80","severity":1,"message":"85","line":11,"column":9,"nodeType":"82","messageId":"83","endLine":11,"endColumn":20},{"ruleId":"80","severity":1,"message":"86","line":28,"column":12,"nodeType":"82","messageId":"83","endLine":28,"endColumn":20},{"ruleId":"80","severity":1,"message":"87","line":28,"column":22,"nodeType":"82","messageId":"83","endLine":28,"endColumn":33},{"ruleId":"80","severity":1,"message":"88","line":29,"column":12,"nodeType":"82","messageId":"83","endLine":29,"endColumn":23},{"ruleId":"80","severity":1,"message":"89","line":29,"column":25,"nodeType":"82","messageId":"83","endLine":29,"endColumn":39},{"ruleId":"90","severity":1,"message":"91","line":43,"column":8,"nodeType":"92","endLine":43,"endColumn":41,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":156,"column":32,"nodeType":"96","messageId":"97","endLine":156,"endColumn":33},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'forceUpdate' is assigned a value but never used.","'cellPath' is assigned a value but never used.","'setCellPath' is assigned a value but never used.","'cellVisited' is assigned a value but never used.","'setCellVisited' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'finishCell', 'isFinishCell', 'isStartCell', and 'startCell'. Either include them or remove the dependency array.","ArrayExpression",["100"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [startCellCoord, finishCellCoord, startCell, isStartCell, finishCell, isFinishCell]",{"range":"103","text":"104"},[1428,1461],"[startCellCoord, finishCellCoord, startCell, isStartCell, finishCell, isFinishCell]"]